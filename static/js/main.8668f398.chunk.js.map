{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_foldl","acc","_JsArray_indexedMap","_Debug_crash","identifier","Error","_Utils_eqHelp","x","y","depth","stack","push","key","$","elm$core$Dict$toList","_Utils_notEqual","pair","isEqual","pop","_Utils_eq","_Utils_cmp","ord","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_Basics_modBy","modulus","answer","_Basics_cos","Math","cos","_Basics_sin","sin","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_log","log","_String_join","sep","strs","join","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","decoders","g","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_addField","object","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","n","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_map","tagger","node","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","stopPropagation","ae","currentEventNode","ab","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","bd","bI","bB","initialModel","view","bK","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","_Browser_cancelAnimationFrame","cancelAnimationFrame","id","clearTimeout","requestAnimationFrame","setTimeout","author$project$Game$Alive","author$project$Game$Dead","author$project$ExampleWorlds$Cell","bM","bN","elm$core$List$cons","elm$core$Dict$foldr","left","$temp$func","$temp$acc","dict","author$project$Setup$setup","N","Y","be","bD","af","author$project$SimpleArray2D$SimpleArray2DInstance","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","_n0","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","elm$core$Array$repeat","author$project$SimpleArray2D$repeat","numColumns","numRows","initialElement","rows","author$project$SimpleArray2D$columnRowToIndex","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$setHelp","pos","elm$core$Array$tailIndex","elm$core$Array$set","startShift","author$project$SimpleArray2D$set","coord","newValue","array1d","author$project$Game$initWorld","cells","D","O","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$String$fromInt","elm$core$String$join","chunks","_List_toArray","elm$core$Platform$Cmd$none","author$project$Main$AnimationFrame","elm$browser$Browser$AnimationManager$Time","elm$browser$Browser$AnimationManager$State","subs","request","oldTime","_","aJ","aM","elm$core$Task$succeed","elm$browser$Browser$AnimationManager$init","elm$core$Basics$identity","elm$core$Task$init","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","commands","elm$json$Json$Decode$succeed","elm$browser$Browser$AnimationManager$now","Date","now","elm$browser$Browser$AnimationManager$rAF","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$browser$Browser$AnimationManager$onEffects","_n1","pid","time","elm$time$Time$millisToPosix","elm$browser$Browser$AnimationManager$onSelfMsg","newTime","send","sub","elm$core$Basics$composeL","exports","elm$browser$Browser$AnimationManager$subscription","elm$core$Platform$Sub$none","elm_community$list_extra$List$Extra$count","predicate","author$project$Game$gameRule","_n2","_n2$0","_n2$4","elm$core$Basics$modBy","author$project$Game$normalizeCoord","funcA","funcB","elm$core$Array$getHelp","elm$core$Array$get","author$project$SimpleArray2D$get","elm$core$Basics$neq","elm$core$List$append","elm$core$List$concatMap","elm$core$List$filter","isGood","elm$core$List$maybeCons","mx","elm$core$List$filterMap","author$project$Game$getCellsNeighbors","item","dirs","indices","coords","author$project$SimpleArray2D$indexToColumnRow","row","elm$core$Elm$JsArray$foldl","elm$core$Elm$JsArray$indexedMap","elm$core$Array$indexedMap","initialBuilder","helper","mappedLeaf","author$project$SimpleArray2D$indexedMap","author$project$Game$update","world","simpleArray","cellsNeighbors","author$project$Main$update","author$project$Setup$cellSize","author$project$Setup$thickness","avh4$elm_color$Color$RgbaSpace","avh4$elm_color$Color$rgb","elm$core$Basics$min","joakin$elm_canvas$Canvas$Circle","joakin$elm_canvas$Canvas$circle","radius","joakin$elm_canvas$Canvas$Fill","joakin$elm_canvas$Canvas$fill","color","joakin$elm_canvas$Canvas$NotSpecified","joakin$elm_canvas$Canvas$FillAndStroke","joakin$elm_canvas$Canvas$mergeDrawOp","op1","op2","_n0$7","joakin$elm_canvas$Canvas$addSettingsToRenderable","settings","renderable","setting","C","B","joakin$elm_canvas$Canvas$shapes","ss","author$project$Game$renderItem","age","col","colorComponent","elm$core$Array$foldl","baseCase","author$project$SimpleArray2D$indexedFoldl","aggregate","elm$core$String$fromFloat","author$project$Game$toPx","avh4$elm_color$Color$red","avh4$elm_color$Color$white","elm$core$Basics$round","elm$html$Html$Attributes$style","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$json$Json$Encode$string","elm$json$Json$Encode$object","pairs","obj","joakin$elm_canvas$Canvas$Internal$field","joakin$elm_canvas$Canvas$Rect","joakin$elm_canvas$Canvas$rect","width","height","joakin$elm_canvas$Canvas$text","point","str","aa","U","elm$html$Html$canvas","elm$html$Html$node","_VirtualDom_noScript","elm$html$Html$Attributes$height","elm$html$Html$Attributes$width","elm$core$Basics$cos","elm$core$Basics$sin","elm$json$Json$Encode$float","elm$json$Json$Encode$list","entries","_Json_addEntry","joakin$elm_canvas$Canvas$Internal$fn","joakin$elm_canvas$Canvas$Internal$arcTo","x1","y1","x2","y2","joakin$elm_canvas$Canvas$Internal$bezierCurveTo","cp1x","cp1y","cp2x","cp2y","joakin$elm_canvas$Canvas$Internal$lineTo","joakin$elm_canvas$Canvas$Internal$moveTo","joakin$elm_canvas$Canvas$Internal$quadraticCurveTo","cpx","cpy","joakin$elm_canvas$Canvas$renderLineSegment","segment","cmds","_n3","_n4","_n5","_n6","_n7","_n8","_n9","elm$json$Json$Encode$bool","joakin$elm_canvas$Canvas$Internal$arc","startAngle","endAngle","anticlockwise","joakin$elm_canvas$Canvas$Internal$circle","joakin$elm_canvas$Canvas$Internal$rect","joakin$elm_canvas$Canvas$renderShape","shape","segments","avh4$elm_color$Color$black","avh4$elm_color$Color$toCssString","strings","pct","joakin$elm_canvas$Canvas$Internal$fillStyle","joakin$elm_canvas$Canvas$renderShapeFill","joakin$elm_canvas$Canvas$Internal$stroke","joakin$elm_canvas$Canvas$Internal$strokeStyle","joakin$elm_canvas$Canvas$renderShapeStroke","joakin$elm_canvas$Canvas$renderShapeDrawOp","drawOp","joakin$elm_canvas$Canvas$Internal$fillText","text","maybeMaxWidth","maxWidth","joakin$elm_canvas$Canvas$renderTextFill","txt","joakin$elm_canvas$Canvas$Internal$strokeText","joakin$elm_canvas$Canvas$renderTextStroke","joakin$elm_canvas$Canvas$renderTextDrawOp","joakin$elm_canvas$Canvas$renderText","joakin$elm_canvas$Canvas$Internal$beginPath","joakin$elm_canvas$Canvas$renderDrawable","drawable","joakin$elm_canvas$Canvas$Internal$restore","joakin$elm_canvas$Canvas$Internal$save","joakin$elm_canvas$Canvas$renderOne","joakin$elm_canvas$Canvas$Internal$empty","elm$html$Html$Attributes$property","_VirtualDom_noInnerHtmlOrFormAction","test","_VirtualDom_noJavaScriptOrHtmlUri","joakin$elm_canvas$Canvas$toHtml","entities","joakin$elm_canvas$Canvas$render","author$project$Game$view","cellState","author$project$Game$renderItems","a6","bz","family","author$project$Main$GameMsg","elm$html$Html$div","elm$html$Html$map","elm$html$Html$text","Main","author$project$Main$main","_Platform_mergeExportsProd","this","Elm","navigator","registration"],"mappings":"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","file":"static/js/main.8668f398.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ad.E === region.an.E)\n\t{\n\t\treturn 'on line ' + region.ad.E;\n\t}\n\treturn 'on lines ' + region.ad.E + ' through ' + region.an.E;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bd,\n\t\timpl.bI,\n\t\timpl.bB,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tk: func(record.k),\n\t\tae: record.ae,\n\t\tab: record.ab\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.k;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ae;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ab) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bd,\n\t\timpl.bI,\n\t\timpl.bB,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.bK;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bd,\n\t\timpl.bI,\n\t\timpl.bB,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.G && impl.G(sendToApp)\n\t\t\tvar view = impl.bK;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aS);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bG) && (_VirtualDom_doc.title = title = doc.bG);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.bo;\n\tvar onUrlRequest = impl.bp;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tG: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aG === next.aG\n\t\t\t\t\t\t\t&& curr.aq === next.aq\n\t\t\t\t\t\t\t&& curr.aD.a === next.aD.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tbd: function(flags)\n\t\t{\n\t\t\treturn A3(impl.bd, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tbK: impl.bK,\n\t\tbI: impl.bI,\n\t\tbB: impl.bB\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { ba: 'hidden', aU: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { ba: 'mozHidden', aU: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { ba: 'msHidden', aU: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { ba: 'webkitHidden', aU: 'webkitvisibilitychange' }\n\t\t: { ba: 'hidden', aU: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taL: _Browser_getScene(),\n\t\taO: {\n\t\t\tbM: _Browser_window.pageXOffset,\n\t\t\tbN: _Browser_window.pageYOffset,\n\t\t\taf: _Browser_doc.documentElement.clientWidth,\n\t\t\tY: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\taf: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tY: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taL: {\n\t\t\t\taf: node.scrollWidth,\n\t\t\t\tY: node.scrollHeight\n\t\t\t},\n\t\t\taO: {\n\t\t\t\tbM: node.scrollLeft,\n\t\t\t\tbN: node.scrollTop,\n\t\t\t\taf: node.clientWidth,\n\t\t\t\tY: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taL: _Browser_getScene(),\n\t\t\taO: {\n\t\t\t\tbM: x,\n\t\t\t\tbN: y,\n\t\t\t\taf: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tY: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\ta3: {\n\t\t\t\tbM: x + rect.left,\n\t\t\t\tbN: y + rect.top,\n\t\t\t\taf: rect.width,\n\t\t\t\tY: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Game$Alive = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Game$Dead = {$: 1};\nvar author$project$ExampleWorlds$Cell = F2(\n\tfunction (x, y) {\n\t\treturn {bM: x, bN: y};\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar author$project$ExampleWorlds$initialStateTwo = _List_fromArray(\n\t[\n\t\tA2(author$project$ExampleWorlds$Cell, 0, 1),\n\t\tA2(author$project$ExampleWorlds$Cell, 1, 1),\n\t\tA2(author$project$ExampleWorlds$Cell, 2, 2),\n\t\tA2(author$project$ExampleWorlds$Cell, 3, 3),\n\t\tA2(author$project$ExampleWorlds$Cell, 4, 2),\n\t\tA2(author$project$ExampleWorlds$Cell, 2, 4),\n\t\tA2(author$project$ExampleWorlds$Cell, 4, 4),\n\t\tA2(author$project$ExampleWorlds$Cell, 5, 4),\n\t\tA2(author$project$ExampleWorlds$Cell, 4, 5),\n\t\tA2(author$project$ExampleWorlds$Cell, 5, 5)\n\t]);\nvar author$project$Setup$setup = {N: 20, Y: 500, be: author$project$ExampleWorlds$initialStateTwo, bD: 100, af: 500};\nvar author$project$SimpleArray2D$SimpleArray2DInstance = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar author$project$SimpleArray2D$repeat = F3(\n\tfunction (numColumns, numRows, initialElement) {\n\t\tvar rows = A2(elm$core$Basics$max, 1, numRows);\n\t\tvar columns = A2(elm$core$Basics$max, 1, numColumns);\n\t\tvar array = A2(elm$core$Array$repeat, columns * rows, initialElement);\n\t\treturn A2(author$project$SimpleArray2D$SimpleArray2DInstance, numColumns, array);\n\t});\nvar author$project$SimpleArray2D$columnRowToIndex = F2(\n\tfunction (numColumns, _n0) {\n\t\tvar column = _n0.a;\n\t\tvar row = _n0.b;\n\t\treturn column + (numColumns * row);\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar author$project$SimpleArray2D$set = F3(\n\tfunction (coord, newValue, _n0) {\n\t\tvar numColumns = _n0.a;\n\t\tvar array1d = _n0.b;\n\t\tvar newArray1d = A3(\n\t\t\telm$core$Array$set,\n\t\t\tA2(author$project$SimpleArray2D$columnRowToIndex, numColumns, coord),\n\t\t\tnewValue,\n\t\t\tarray1d);\n\t\treturn A2(author$project$SimpleArray2D$SimpleArray2DInstance, numColumns, newArray1d);\n\t});\nvar elm$core$Basics$True = 0;\nvar author$project$Game$initWorld = {\n\tA: A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, cells) {\n\t\t\t\tvar x = _n0.bM;\n\t\t\t\tvar y = _n0.bN;\n\t\t\t\treturn A3(\n\t\t\t\t\tauthor$project$SimpleArray2D$set,\n\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\tauthor$project$Game$Alive(0),\n\t\t\t\t\tcells);\n\t\t\t}),\n\t\tA3(author$project$SimpleArray2D$repeat, author$project$Setup$setup.N, author$project$Setup$setup.N, author$project$Game$Dead),\n\t\tauthor$project$Setup$setup.be),\n\tD: true,\n\tO: 0\n};\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$init = function (_n0) {\n\treturn _Utils_Tuple2(\n\t\t{n: author$project$Game$initWorld},\n\t\telm$core$Platform$Cmd$none);\n};\nvar author$project$Main$AnimationFrame = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$AnimationManager$Time = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$AnimationManager$State = F3(\n\tfunction (subs, request, oldTime) {\n\t\treturn {_: oldTime, aJ: request, aM: subs};\n\t});\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$browser$Browser$AnimationManager$init = elm$core$Task$succeed(\n\tA3(elm$browser$Browser$AnimationManager$State, _List_Nil, elm$core$Maybe$Nothing, 0));\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ap: fragment, aq: host, aB: path, aD: port_, aG: protocol, aH: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$AnimationManager$now = _Browser_now(0);\nvar elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(0);\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$browser$Browser$AnimationManager$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar request = _n0.aJ;\n\t\tvar oldTime = _n0._;\n\t\tvar _n1 = _Utils_Tuple2(request, subs);\n\t\tif (_n1.a.$ === 1) {\n\t\t\tif (!_n1.b.b) {\n\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\treturn elm$browser$Browser$AnimationManager$init;\n\t\t\t} else {\n\t\t\t\tvar _n4 = _n1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (time) {\n\t\t\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t\t\telm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\t\t\ttime));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$now);\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Process$spawn(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\t\telm$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$rAF)));\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_n1.b.b) {\n\t\t\t\tvar pid = _n1.a.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (_n3) {\n\t\t\t\t\t\treturn elm$browser$Browser$AnimationManager$init;\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Process$kill(pid));\n\t\t\t} else {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA3(elm$browser$Browser$AnimationManager$State, subs, request, oldTime));\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$browser$Browser$AnimationManager$onSelfMsg = F3(\n\tfunction (router, newTime, _n0) {\n\t\tvar subs = _n0.aM;\n\t\tvar oldTime = _n0._;\n\t\tvar send = function (sub) {\n\t\t\tif (!sub.$) {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(\n\t\t\t\t\t\telm$time$Time$millisToPosix(newTime)));\n\t\t\t} else {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(newTime - oldTime));\n\t\t\t}\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pid) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (_n1) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\telm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\tnewTime));\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\t\tA2(elm$core$List$map, send, subs)));\n\t\t\t},\n\t\t\telm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\telm$core$Platform$sendToSelf(router),\n\t\t\t\t\telm$browser$Browser$AnimationManager$rAF)));\n\t});\nvar elm$browser$Browser$AnimationManager$Delta = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$browser$Browser$AnimationManager$subMap = F2(\n\tfunction (func, sub) {\n\t\tif (!sub.$) {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn elm$browser$Browser$AnimationManager$Time(\n\t\t\t\tA2(elm$core$Basics$composeL, func, tagger));\n\t\t} else {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn elm$browser$Browser$AnimationManager$Delta(\n\t\t\t\tA2(elm$core$Basics$composeL, func, tagger));\n\t\t}\n\t});\n_Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager(elm$browser$Browser$AnimationManager$init, elm$browser$Browser$AnimationManager$onEffects, elm$browser$Browser$AnimationManager$onSelfMsg, 0, elm$browser$Browser$AnimationManager$subMap);\nvar elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');\nvar elm$browser$Browser$AnimationManager$onAnimationFrame = function (tagger) {\n\treturn elm$browser$Browser$AnimationManager$subscription(\n\t\telm$browser$Browser$AnimationManager$Time(tagger));\n};\nvar elm$browser$Browser$Events$onAnimationFrame = elm$browser$Browser$AnimationManager$onAnimationFrame;\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar author$project$Main$subscriptions = function (_n0) {\n\tvar world = _n0.n;\n\treturn world.D ? elm$browser$Browser$Events$onAnimationFrame(author$project$Main$AnimationFrame) : elm$core$Platform$Sub$none;\n};\nvar author$project$Game$Tick = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm_community$list_extra$List$Extra$count = function (predicate) {\n\treturn A2(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (x, acc) {\n\t\t\t\treturn predicate(x) ? (acc + 1) : acc;\n\t\t\t}),\n\t\t0);\n};\nvar author$project$Game$gameRule = F2(\n\tfunction (_n0, _n1) {\n\t\tvar i = _n0.a;\n\t\tvar j = _n0.b;\n\t\tvar cell = _n1.a;\n\t\tvar neighbours = _n1.b;\n\t\tvar aliveNeighbours = A2(\n\t\t\telm_community$list_extra$List$Extra$count,\n\t\t\tfunction (c) {\n\t\t\t\tif (!c.$) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tneighbours);\n\t\tvar _n2 = _Utils_Tuple2(cell, aliveNeighbours);\n\t\t_n2$0:\n\t\twhile (true) {\n\t\t\t_n2$4:\n\t\t\twhile (true) {\n\t\t\t\tif (!_n2.a.$) {\n\t\t\t\t\tswitch (_n2.b) {\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tif (_n2.a.a === 50) {\n\t\t\t\t\t\t\t\tbreak _n2$0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar age = _n2.a.a;\n\t\t\t\t\t\t\t\treturn author$project$Game$Alive(age + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tif (_n2.a.a === 50) {\n\t\t\t\t\t\t\t\tbreak _n2$0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar age = _n2.a.a;\n\t\t\t\t\t\t\t\treturn author$project$Game$Alive(age + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (_n2.a.a === 50) {\n\t\t\t\t\t\t\t\tbreak _n2$0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _n2$4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (_n2.b === 3) {\n\t\t\t\t\t\tvar _n3 = _n2.a;\n\t\t\t\t\t\treturn author$project$Game$Alive(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _n2$4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn author$project$Game$Dead;\n\t\t}\n\t\treturn author$project$Game$Dead;\n\t});\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar elm$core$Tuple$mapBoth = F3(\n\tfunction (funcA, funcB, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tfuncA(x),\n\t\t\tfuncB(y));\n\t});\nvar author$project$Game$normalizeCoord = A2(\n\telm$core$Tuple$mapBoth,\n\telm$core$Basics$modBy(author$project$Setup$setup.N),\n\telm$core$Basics$modBy(author$project$Setup$setup.N));\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar elm$core$Array$length = function (_n0) {\n\tvar len = _n0.a;\n\treturn len;\n};\nvar author$project$SimpleArray2D$get = F2(\n\tfunction (_n0, _n1) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar numColumns = _n1.a;\n\t\tvar array1d = _n1.b;\n\t\treturn ((_Utils_cmp(\n\t\t\ty,\n\t\t\t(elm$core$Array$length(array1d) / numColumns) | 0) > -1) || ((y < 0) || ((_Utils_cmp(x, numColumns) > -1) || (x < 0)))) ? elm$core$Maybe$Nothing : A2(\n\t\t\telm$core$Array$get,\n\t\t\tA2(\n\t\t\t\tauthor$project$SimpleArray2D$columnRowToIndex,\n\t\t\t\tnumColumns,\n\t\t\t\t_Utils_Tuple2(x, y)),\n\t\t\tarray1d);\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$Game$getCellsNeighbors = F3(\n\tfunction (cells, _n0, item) {\n\t\tvar i = _n0.a;\n\t\tvar j = _n0.b;\n\t\tvar dirs = _List_fromArray(\n\t\t\t[-1, 0, 1]);\n\t\tvar indices = A2(\n\t\t\telm$core$List$filter,\n\t\t\telm$core$Basics$neq(\n\t\t\t\t_Utils_Tuple2(i, j)),\n\t\t\tA2(\n\t\t\t\telm$core$List$concatMap,\n\t\t\t\tfunction (a) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(a + i, b + j);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdirs);\n\t\t\t\t},\n\t\t\t\tdirs));\n\t\treturn _Utils_Tuple2(\n\t\t\titem,\n\t\t\tA2(\n\t\t\t\telm$core$List$filterMap,\n\t\t\t\tfunction (coords) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tauthor$project$SimpleArray2D$get,\n\t\t\t\t\t\tauthor$project$Game$normalizeCoord(coords),\n\t\t\t\t\t\tcells);\n\t\t\t\t},\n\t\t\t\tindices));\n\t});\nvar author$project$SimpleArray2D$indexToColumnRow = F2(\n\tfunction (numColumns, index) {\n\t\tvar row = (index / numColumns) | 0;\n\t\tvar column = A2(elm$core$Basics$modBy, numColumns, index);\n\t\treturn _Utils_Tuple2(column, row);\n\t});\nvar elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar elm$core$Array$indexedMap = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar initialBuilder = {\n\t\t\td: _List_Nil,\n\t\t\ta: 0,\n\t\t\tc: A3(\n\t\t\t\telm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\telm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = elm$core$Array$Leaf(\n\t\t\t\t\t\tA3(elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\td: A2(elm$core$List$cons, mappedLeaf, builder.d),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\tc: builder.c\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\telm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar author$project$SimpleArray2D$indexedMap = F2(\n\tfunction (func, _n0) {\n\t\tvar numColumns = _n0.a;\n\t\tvar array1d = _n0.b;\n\t\tvar func1d = F2(\n\t\t\tfunction (index, item) {\n\t\t\t\treturn A2(\n\t\t\t\t\tfunc,\n\t\t\t\t\tA2(author$project$SimpleArray2D$indexToColumnRow, numColumns, index),\n\t\t\t\t\titem);\n\t\t\t});\n\t\tvar newArray1d = A2(elm$core$Array$indexedMap, func1d, array1d);\n\t\treturn A2(author$project$SimpleArray2D$SimpleArray2DInstance, numColumns, newArray1d);\n\t});\nvar author$project$Game$updateCells = function (simpleArray) {\n\tvar cellsNeighbors = A2(\n\t\tauthor$project$SimpleArray2D$indexedMap,\n\t\tauthor$project$Game$getCellsNeighbors(simpleArray),\n\t\tsimpleArray);\n\treturn A2(author$project$SimpleArray2D$indexedMap, author$project$Game$gameRule, cellsNeighbors);\n};\nvar author$project$Game$update = F2(\n\tfunction (msg, world) {\n\t\tif (!msg.$) {\n\t\t\tvar time = msg.a;\n\t\t\treturn (_Utils_cmp(time - world.O, author$project$Setup$setup.bD) < 0) ? _Utils_Tuple2(world, elm$core$Platform$Cmd$none) : _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tworld,\n\t\t\t\t\t{\n\t\t\t\t\t\tA: author$project$Game$updateCells(world.A),\n\t\t\t\t\t\tO: time\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tvar isRunning = msg.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tworld,\n\t\t\t\t\t{D: isRunning}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tif (!msg.$) {\n\t\t\tvar t = msg.a;\n\t\t\tvar timeMiliseconds = elm$time$Time$posixToMillis(t);\n\t\t\tvar worldMsg = author$project$Game$Tick(timeMiliseconds);\n\t\t\tvar _n1 = A2(author$project$Game$update, worldMsg, model.n);\n\t\t\tvar newWorld = _n1.a;\n\t\t\tvar cmd = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{n: newWorld}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tvar gameMsg = msg.a;\n\t\t\tvar _n2 = A2(author$project$Game$update, gameMsg, model.n);\n\t\t\tvar newWorld = _n2.a;\n\t\t\tvar cmd = _n2.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{n: newWorld}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$Game$SetRunning = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Setup$cellSize = author$project$Setup$setup.af / author$project$Setup$setup.N;\nvar author$project$Setup$thickness = author$project$Setup$cellSize * 0.5;\nvar avh4$elm_color$Color$RgbaSpace = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar avh4$elm_color$Color$rgb = F3(\n\tfunction (r, g, b) {\n\t\treturn A4(avh4$elm_color$Color$RgbaSpace, r, g, b, 1.0);\n\t});\nvar elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar joakin$elm_canvas$Canvas$Circle = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar joakin$elm_canvas$Canvas$circle = F2(\n\tfunction (pos, radius) {\n\t\treturn A2(joakin$elm_canvas$Canvas$Circle, pos, radius);\n\t});\nvar joakin$elm_canvas$Canvas$Fill = function (a) {\n\treturn {$: 1, a: a};\n};\nvar joakin$elm_canvas$Canvas$SettingDrawOp = function (a) {\n\treturn {$: 2, a: a};\n};\nvar joakin$elm_canvas$Canvas$fill = function (color) {\n\treturn joakin$elm_canvas$Canvas$SettingDrawOp(\n\t\tjoakin$elm_canvas$Canvas$Fill(color));\n};\nvar joakin$elm_canvas$Canvas$DrawableShapes = function (a) {\n\treturn {$: 1, a: a};\n};\nvar joakin$elm_canvas$Canvas$NotSpecified = {$: 0};\nvar joakin$elm_canvas$Canvas$Renderable = elm$core$Basics$identity;\nvar joakin$elm_canvas$Canvas$FillAndStroke = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar joakin$elm_canvas$Canvas$Stroke = function (a) {\n\treturn {$: 2, a: a};\n};\nvar joakin$elm_canvas$Canvas$mergeDrawOp = F2(\n\tfunction (op1, op2) {\n\t\tvar _n0 = _Utils_Tuple2(op1, op2);\n\t\t_n0$7:\n\t\twhile (true) {\n\t\t\tswitch (_n0.b.$) {\n\t\t\t\tcase 3:\n\t\t\t\t\tvar _n1 = _n0.b;\n\t\t\t\t\tvar c = _n1.a;\n\t\t\t\t\tvar sc = _n1.b;\n\t\t\t\t\treturn A2(joakin$elm_canvas$Canvas$FillAndStroke, c, sc);\n\t\t\t\tcase 1:\n\t\t\t\t\tswitch (_n0.a.$) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar c = _n0.b.a;\n\t\t\t\t\t\t\treturn joakin$elm_canvas$Canvas$Fill(c);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar c1 = _n0.a.a;\n\t\t\t\t\t\t\tvar c2 = _n0.b.a;\n\t\t\t\t\t\t\treturn A2(joakin$elm_canvas$Canvas$FillAndStroke, c2, c1);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tvar _n2 = _n0.a;\n\t\t\t\t\t\t\tvar c = _n2.a;\n\t\t\t\t\t\t\tvar sc = _n2.b;\n\t\t\t\t\t\t\tvar c2 = _n0.b.a;\n\t\t\t\t\t\t\treturn A2(joakin$elm_canvas$Canvas$FillAndStroke, c2, sc);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _n0$7;\n\t\t\t\t\t}\n\t\t\t\tcase 2:\n\t\t\t\t\tswitch (_n0.a.$) {\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar c = _n0.b.a;\n\t\t\t\t\t\t\treturn joakin$elm_canvas$Canvas$Stroke(c);\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar c1 = _n0.a.a;\n\t\t\t\t\t\t\tvar c2 = _n0.b.a;\n\t\t\t\t\t\t\treturn A2(joakin$elm_canvas$Canvas$FillAndStroke, c1, c2);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tvar _n3 = _n0.a;\n\t\t\t\t\t\t\tvar c = _n3.a;\n\t\t\t\t\t\t\tvar sc = _n3.b;\n\t\t\t\t\t\t\tvar sc2 = _n0.b.a;\n\t\t\t\t\t\t\treturn A2(joakin$elm_canvas$Canvas$FillAndStroke, c, sc2);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _n0$7;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (!_n0.a.$) {\n\t\t\t\t\t\tbreak _n0$7;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar whatever = _n0.a;\n\t\t\t\t\t\tvar _n5 = _n0.b;\n\t\t\t\t\t\treturn whatever;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar _n4 = _n0.a;\n\t\tvar whatever = _n0.b;\n\t\treturn whatever;\n\t});\nvar joakin$elm_canvas$Canvas$addSettingsToRenderable = F2(\n\tfunction (settings, renderable) {\n\t\tvar addSetting = F2(\n\t\t\tfunction (setting, _n1) {\n\t\t\t\tvar r = _n1;\n\t\t\t\tswitch (setting.$) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar cmd = setting.a;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to: A2(elm$core$List$cons, cmd, r.o)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tvar cmds = setting.a;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to: A3(elm$core$List$foldl, elm$core$List$cons, r.o, cmds)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tvar f = setting.a;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tC: f(r.C)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar op = setting.a;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tB: A2(joakin$elm_canvas$Canvas$mergeDrawOp, r.B, op)\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(elm$core$List$foldl, addSetting, renderable, settings);\n\t});\nvar joakin$elm_canvas$Canvas$shapes = F2(\n\tfunction (settings, ss) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$addSettingsToRenderable,\n\t\t\tsettings,\n\t\t\t{\n\t\t\t\to: _List_Nil,\n\t\t\t\tB: joakin$elm_canvas$Canvas$NotSpecified,\n\t\t\t\tC: joakin$elm_canvas$Canvas$DrawableShapes(ss)\n\t\t\t});\n\t});\nvar author$project$Game$renderItem = F2(\n\tfunction (_n0, age) {\n\t\tvar col = _n0.a;\n\t\tvar row = _n0.b;\n\t\tvar colorComponent = A2(elm$core$Basics$min, age / 10.0, 0.9);\n\t\tvar color = A3(avh4$elm_color$Color$rgb, colorComponent, colorComponent, colorComponent);\n\t\tvar _n1 = _Utils_Tuple2(col, row);\n\t\tvar colf = _n1.a;\n\t\tvar rowf = _n1.b;\n\t\tvar _n2 = _Utils_Tuple2((rowf * author$project$Setup$cellSize) + author$project$Setup$cellSize, (colf * author$project$Setup$cellSize) + author$project$Setup$cellSize);\n\t\tvar x = _n2.a;\n\t\tvar y = _n2.b;\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$shapes,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tjoakin$elm_canvas$Canvas$fill(color)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\tjoakin$elm_canvas$Canvas$circle,\n\t\t\t\t\t_Utils_Tuple2(x - author$project$Setup$thickness, y - author$project$Setup$thickness),\n\t\t\t\t\tauthor$project$Setup$thickness * (colorComponent + 1))\n\t\t\t\t]));\n\t});\nvar elm$core$Array$foldl = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldl,\n\t\t\tfunc,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, baseCase, tree),\n\t\t\ttail);\n\t});\nvar author$project$SimpleArray2D$indexedFoldl = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar numColumns = _n0.a;\n\t\tvar array1d = _n0.b;\n\t\tvar func1d = F2(\n\t\t\tfunction (item, _n2) {\n\t\t\t\tvar index = _n2.a;\n\t\t\t\tvar aggregate = _n2.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tindex + 1,\n\t\t\t\t\tA3(\n\t\t\t\t\t\tfunc,\n\t\t\t\t\t\tA2(author$project$SimpleArray2D$indexToColumnRow, numColumns, index),\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taggregate));\n\t\t\t});\n\t\tvar _n1 = A3(\n\t\t\telm$core$Array$foldl,\n\t\t\tfunc1d,\n\t\t\t_Utils_Tuple2(0, baseCase),\n\t\t\tarray1d);\n\t\tvar finalAggregate = _n1.b;\n\t\treturn finalAggregate;\n\t});\nvar author$project$Game$renderItems = function (world) {\n\treturn A3(\n\t\tauthor$project$SimpleArray2D$indexedFoldl,\n\t\tF3(\n\t\t\tfunction (_n0, cellState, list) {\n\t\t\t\tvar x = _n0.a;\n\t\t\t\tvar y = _n0.b;\n\t\t\t\tif (!cellState.$) {\n\t\t\t\t\tvar age = cellState.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Game$renderItem,\n\t\t\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\t\t\tage),\n\t\t\t\t\t\tlist);\n\t\t\t\t} else {\n\t\t\t\t\treturn list;\n\t\t\t\t}\n\t\t\t}),\n\t\t_List_Nil,\n\t\tworld.A);\n};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar author$project$Game$toPx = function (value) {\n\treturn elm$core$String$fromFloat(value) + 'px';\n};\nvar avh4$elm_color$Color$red = A4(avh4$elm_color$Color$RgbaSpace, 204 / 255, 0 / 255, 0 / 255, 1.0);\nvar avh4$elm_color$Color$white = A4(avh4$elm_color$Color$RgbaSpace, 255 / 255, 255 / 255, 255 / 255, 1.0);\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$Basics$round = _Basics_round;\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar joakin$elm_canvas$Canvas$SettingCommand = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(0),\n\t\t\tpairs));\n};\nvar joakin$elm_canvas$Canvas$Internal$field = F2(\n\tfunction (name, value) {\n\t\treturn elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'type',\n\t\t\t\t\telm$json$Json$Encode$string('field')),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'name',\n\t\t\t\t\telm$json$Json$Encode$string(name)),\n\t\t\t\t\t_Utils_Tuple2('value', value)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$font = function (f) {\n\treturn A2(\n\t\tjoakin$elm_canvas$Canvas$Internal$field,\n\t\t'font',\n\t\telm$json$Json$Encode$string(f));\n};\nvar joakin$elm_canvas$Canvas$font = function (_n0) {\n\tvar size = _n0.bz;\n\tvar family = _n0.a6;\n\treturn joakin$elm_canvas$Canvas$SettingCommand(\n\t\tjoakin$elm_canvas$Canvas$Internal$font(\n\t\t\telm$core$String$fromInt(size) + ('px ' + family)));\n};\nvar joakin$elm_canvas$Canvas$Rect = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar joakin$elm_canvas$Canvas$rect = F3(\n\tfunction (pos, width, height) {\n\t\treturn A3(joakin$elm_canvas$Canvas$Rect, pos, width, height);\n\t});\nvar joakin$elm_canvas$Canvas$DrawableText = function (a) {\n\treturn {$: 0, a: a};\n};\nvar joakin$elm_canvas$Canvas$text = F3(\n\tfunction (settings, point, str) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$addSettingsToRenderable,\n\t\t\tsettings,\n\t\t\t{\n\t\t\t\to: _List_Nil,\n\t\t\t\tB: joakin$elm_canvas$Canvas$NotSpecified,\n\t\t\t\tC: joakin$elm_canvas$Canvas$DrawableText(\n\t\t\t\t\t{F: elm$core$Maybe$Nothing, aa: point, U: str})\n\t\t\t});\n\t});\nvar elm$html$Html$canvas = _VirtualDom_node('canvas');\nvar elm$virtual_dom$VirtualDom$node = function (tag) {\n\treturn _VirtualDom_node(\n\t\t_VirtualDom_noScript(tag));\n};\nvar elm$html$Html$node = elm$virtual_dom$VirtualDom$node;\nvar elm$html$Html$Attributes$height = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'height',\n\t\telm$core$String$fromInt(n));\n};\nvar elm$html$Html$Attributes$width = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'width',\n\t\telm$core$String$fromInt(n));\n};\nvar elm$core$Basics$cos = _Basics_cos;\nvar elm$core$Basics$sin = _Basics_sin;\nvar elm$json$Json$Encode$float = _Json_wrap;\nvar elm$json$Json$Encode$list = F2(\n\tfunction (func, entries) {\n\t\treturn _Json_wrap(\n\t\t\tA3(\n\t\t\t\telm$core$List$foldl,\n\t\t\t\t_Json_addEntry(func),\n\t\t\t\t_Json_emptyArray(0),\n\t\t\t\tentries));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$fn = F2(\n\tfunction (name, args) {\n\t\treturn elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'type',\n\t\t\t\t\telm$json$Json$Encode$string('function')),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'name',\n\t\t\t\t\telm$json$Json$Encode$string(name)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'args',\n\t\t\t\t\tA2(elm$json$Json$Encode$list, elm$core$Basics$identity, args))\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$arcTo = F5(\n\tfunction (x1, y1, x2, y2, radius) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'arcTo',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(x1),\n\t\t\t\t\telm$json$Json$Encode$float(y1),\n\t\t\t\t\telm$json$Json$Encode$float(x2),\n\t\t\t\t\telm$json$Json$Encode$float(y2),\n\t\t\t\t\telm$json$Json$Encode$float(radius)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$bezierCurveTo = F6(\n\tfunction (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'bezierCurveTo',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(cp1x),\n\t\t\t\t\telm$json$Json$Encode$float(cp1y),\n\t\t\t\t\telm$json$Json$Encode$float(cp2x),\n\t\t\t\t\telm$json$Json$Encode$float(cp2y),\n\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\telm$json$Json$Encode$float(y)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$lineTo = F2(\n\tfunction (x, y) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'lineTo',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\telm$json$Json$Encode$float(y)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$moveTo = F2(\n\tfunction (x, y) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'moveTo',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\telm$json$Json$Encode$float(y)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$quadraticCurveTo = F4(\n\tfunction (cpx, cpy, x, y) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'quadraticCurveTo',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(cpx),\n\t\t\t\t\telm$json$Json$Encode$float(cpy),\n\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\telm$json$Json$Encode$float(y)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$renderLineSegment = F2(\n\tfunction (segment, cmds) {\n\t\tswitch (segment.$) {\n\t\t\tcase 0:\n\t\t\t\tvar _n1 = segment.a;\n\t\t\t\tvar x = _n1.a;\n\t\t\t\tvar y = _n1.b;\n\t\t\t\tvar _n2 = segment.b;\n\t\t\t\tvar x2 = _n2.a;\n\t\t\t\tvar y2 = _n2.b;\n\t\t\t\tvar radius = segment.c;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA5(joakin$elm_canvas$Canvas$Internal$arcTo, x, y, x2, y2, radius),\n\t\t\t\t\tcmds);\n\t\t\tcase 1:\n\t\t\t\tvar _n3 = segment.a;\n\t\t\t\tvar cp1x = _n3.a;\n\t\t\t\tvar cp1y = _n3.b;\n\t\t\t\tvar _n4 = segment.b;\n\t\t\t\tvar cp2x = _n4.a;\n\t\t\t\tvar cp2y = _n4.b;\n\t\t\t\tvar _n5 = segment.c;\n\t\t\t\tvar x = _n5.a;\n\t\t\t\tvar y = _n5.b;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA6(joakin$elm_canvas$Canvas$Internal$bezierCurveTo, cp1x, cp1y, cp2x, cp2y, x, y),\n\t\t\t\t\tcmds);\n\t\t\tcase 2:\n\t\t\t\tvar _n6 = segment.a;\n\t\t\t\tvar x = _n6.a;\n\t\t\t\tvar y = _n6.b;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA2(joakin$elm_canvas$Canvas$Internal$lineTo, x, y),\n\t\t\t\t\tcmds);\n\t\t\tcase 3:\n\t\t\t\tvar _n7 = segment.a;\n\t\t\t\tvar x = _n7.a;\n\t\t\t\tvar y = _n7.b;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA2(joakin$elm_canvas$Canvas$Internal$moveTo, x, y),\n\t\t\t\t\tcmds);\n\t\t\tdefault:\n\t\t\t\tvar _n8 = segment.a;\n\t\t\t\tvar cpx = _n8.a;\n\t\t\t\tvar cpy = _n8.b;\n\t\t\t\tvar _n9 = segment.b;\n\t\t\t\tvar x = _n9.a;\n\t\t\t\tvar y = _n9.b;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA4(joakin$elm_canvas$Canvas$Internal$quadraticCurveTo, cpx, cpy, x, y),\n\t\t\t\t\tcmds);\n\t\t}\n\t});\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar joakin$elm_canvas$Canvas$Internal$arc = F6(\n\tfunction (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'arc',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\telm$json$Json$Encode$float(y),\n\t\t\t\t\telm$json$Json$Encode$float(radius),\n\t\t\t\t\telm$json$Json$Encode$float(startAngle),\n\t\t\t\t\telm$json$Json$Encode$float(endAngle),\n\t\t\t\t\telm$json$Json$Encode$bool(anticlockwise)\n\t\t\t\t]));\n\t});\nvar elm$core$Basics$pi = _Basics_pi;\nvar joakin$elm_canvas$Canvas$Internal$circle = F3(\n\tfunction (x, y, r) {\n\t\treturn A6(joakin$elm_canvas$Canvas$Internal$arc, x, y, r, 0, 2 * elm$core$Basics$pi, false);\n\t});\nvar joakin$elm_canvas$Canvas$Internal$rect = F4(\n\tfunction (x, y, w, h) {\n\t\treturn A2(\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t'rect',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\telm$json$Json$Encode$float(y),\n\t\t\t\t\telm$json$Json$Encode$float(w),\n\t\t\t\t\telm$json$Json$Encode$float(h)\n\t\t\t\t]));\n\t});\nvar joakin$elm_canvas$Canvas$renderShape = F2(\n\tfunction (shape, cmds) {\n\t\tswitch (shape.$) {\n\t\t\tcase 0:\n\t\t\t\tvar _n1 = shape.a;\n\t\t\t\tvar x = _n1.a;\n\t\t\t\tvar y = _n1.b;\n\t\t\t\tvar w = shape.b;\n\t\t\t\tvar h = shape.c;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA4(joakin$elm_canvas$Canvas$Internal$rect, x, y, w, h),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA2(joakin$elm_canvas$Canvas$Internal$moveTo, x, y),\n\t\t\t\t\t\tcmds));\n\t\t\tcase 1:\n\t\t\t\tvar _n2 = shape.a;\n\t\t\t\tvar x = _n2.a;\n\t\t\t\tvar y = _n2.b;\n\t\t\t\tvar r = shape.b;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA3(joakin$elm_canvas$Canvas$Internal$circle, x, y, r),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA2(joakin$elm_canvas$Canvas$Internal$moveTo, x + r, y),\n\t\t\t\t\t\tcmds));\n\t\t\tcase 2:\n\t\t\t\tvar _n3 = shape.a;\n\t\t\t\tvar x = _n3.a;\n\t\t\t\tvar y = _n3.b;\n\t\t\t\tvar segments = shape.b;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\tjoakin$elm_canvas$Canvas$renderLineSegment,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA2(joakin$elm_canvas$Canvas$Internal$moveTo, x, y),\n\t\t\t\t\t\tcmds),\n\t\t\t\t\tsegments);\n\t\t\tdefault:\n\t\t\t\tvar _n4 = shape.a;\n\t\t\t\tvar x = _n4.a;\n\t\t\t\tvar y = _n4.b;\n\t\t\t\tvar radius = shape.b;\n\t\t\t\tvar startAngle = shape.c;\n\t\t\t\tvar endAngle = shape.d;\n\t\t\t\tvar anticlockwise = shape.e;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA6(joakin$elm_canvas$Canvas$Internal$arc, x, y, radius, startAngle, endAngle, anticlockwise),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tjoakin$elm_canvas$Canvas$Internal$moveTo,\n\t\t\t\t\t\t\tx + elm$core$Basics$cos(startAngle),\n\t\t\t\t\t\t\ty + elm$core$Basics$sin(startAngle)),\n\t\t\t\t\t\tcmds));\n\t\t}\n\t});\nvar avh4$elm_color$Color$black = A4(avh4$elm_color$Color$RgbaSpace, 0 / 255, 0 / 255, 0 / 255, 1.0);\nvar joakin$elm_canvas$Canvas$Internal$NonZero = 0;\nvar joakin$elm_canvas$Canvas$Internal$fillRuleToString = function (fillRule) {\n\tif (!fillRule) {\n\t\treturn 'nonzero';\n\t} else {\n\t\treturn 'evenodd';\n\t}\n};\nvar joakin$elm_canvas$Canvas$Internal$fill = function (fillRule) {\n\treturn A2(\n\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t'fill',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$json$Json$Encode$string(\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fillRuleToString(fillRule))\n\t\t\t]));\n};\nvar elm$core$String$concat = function (strings) {\n\treturn A2(elm$core$String$join, '', strings);\n};\nvar avh4$elm_color$Color$toCssString = function (_n0) {\n\tvar r = _n0.a;\n\tvar g = _n0.b;\n\tvar b = _n0.c;\n\tvar a = _n0.d;\n\tvar roundTo = function (x) {\n\t\treturn elm$core$Basics$round(x * 1000) / 1000;\n\t};\n\tvar pct = function (x) {\n\t\treturn elm$core$Basics$round(x * 10000) / 100;\n\t};\n\treturn elm$core$String$concat(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t'rgba(',\n\t\t\t\telm$core$String$fromFloat(\n\t\t\t\tpct(r)),\n\t\t\t\t'%,',\n\t\t\t\telm$core$String$fromFloat(\n\t\t\t\tpct(g)),\n\t\t\t\t'%,',\n\t\t\t\telm$core$String$fromFloat(\n\t\t\t\tpct(b)),\n\t\t\t\t'%,',\n\t\t\t\telm$core$String$fromFloat(\n\t\t\t\troundTo(a)),\n\t\t\t\t')'\n\t\t\t]));\n};\nvar joakin$elm_canvas$Canvas$Internal$fillStyle = function (color) {\n\treturn A2(\n\t\tjoakin$elm_canvas$Canvas$Internal$field,\n\t\t'fillStyle',\n\t\telm$json$Json$Encode$string(\n\t\t\tavh4$elm_color$Color$toCssString(color)));\n};\nvar joakin$elm_canvas$Canvas$renderShapeFill = F2(\n\tfunction (c, cmds) {\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\tjoakin$elm_canvas$Canvas$Internal$fill(0),\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fillStyle(c),\n\t\t\t\tcmds));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$stroke = A2(joakin$elm_canvas$Canvas$Internal$fn, 'stroke', _List_Nil);\nvar joakin$elm_canvas$Canvas$Internal$strokeStyle = function (color) {\n\treturn A2(\n\t\tjoakin$elm_canvas$Canvas$Internal$field,\n\t\t'strokeStyle',\n\t\telm$json$Json$Encode$string(\n\t\t\tavh4$elm_color$Color$toCssString(color)));\n};\nvar joakin$elm_canvas$Canvas$renderShapeStroke = F2(\n\tfunction (c, cmds) {\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\tjoakin$elm_canvas$Canvas$Internal$stroke,\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$strokeStyle(c),\n\t\t\t\tcmds));\n\t});\nvar joakin$elm_canvas$Canvas$renderShapeDrawOp = F2(\n\tfunction (drawOp, cmds) {\n\t\tswitch (drawOp.$) {\n\t\t\tcase 0:\n\t\t\t\treturn A2(joakin$elm_canvas$Canvas$renderShapeFill, avh4$elm_color$Color$black, cmds);\n\t\t\tcase 1:\n\t\t\t\tvar c = drawOp.a;\n\t\t\t\treturn A2(joakin$elm_canvas$Canvas$renderShapeFill, c, cmds);\n\t\t\tcase 2:\n\t\t\t\tvar c = drawOp.a;\n\t\t\t\treturn A2(joakin$elm_canvas$Canvas$renderShapeStroke, c, cmds);\n\t\t\tdefault:\n\t\t\t\tvar fc = drawOp.a;\n\t\t\t\tvar sc = drawOp.b;\n\t\t\t\treturn A2(\n\t\t\t\t\tjoakin$elm_canvas$Canvas$renderShapeStroke,\n\t\t\t\t\tsc,\n\t\t\t\t\tA2(joakin$elm_canvas$Canvas$renderShapeFill, fc, cmds));\n\t\t}\n\t});\nvar joakin$elm_canvas$Canvas$Internal$fillText = F4(\n\tfunction (text, x, y, maybeMaxWidth) {\n\t\tif (maybeMaxWidth.$ === 1) {\n\t\t\treturn A2(\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t\t'fillText',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$json$Json$Encode$string(text),\n\t\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\t\telm$json$Json$Encode$float(y)\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\tvar maxWidth = maybeMaxWidth.a;\n\t\t\treturn A2(\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t\t'fillText',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$json$Json$Encode$string(text),\n\t\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\t\telm$json$Json$Encode$float(y),\n\t\t\t\t\t\telm$json$Json$Encode$float(maxWidth)\n\t\t\t\t\t]));\n\t\t}\n\t});\nvar joakin$elm_canvas$Canvas$renderTextFill = F5(\n\tfunction (txt, x, y, color, cmds) {\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\tA4(joakin$elm_canvas$Canvas$Internal$fillText, txt.U, x, y, txt.F),\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fillStyle(color),\n\t\t\t\tcmds));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$strokeText = F4(\n\tfunction (text, x, y, maybeMaxWidth) {\n\t\tif (maybeMaxWidth.$ === 1) {\n\t\t\treturn A2(\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t\t'strokeText',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$json$Json$Encode$string(text),\n\t\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\t\telm$json$Json$Encode$float(y)\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\tvar maxWidth = maybeMaxWidth.a;\n\t\t\treturn A2(\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$fn,\n\t\t\t\t'strokeText',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$json$Json$Encode$string(text),\n\t\t\t\t\t\telm$json$Json$Encode$float(x),\n\t\t\t\t\t\telm$json$Json$Encode$float(y),\n\t\t\t\t\t\telm$json$Json$Encode$float(maxWidth)\n\t\t\t\t\t]));\n\t\t}\n\t});\nvar joakin$elm_canvas$Canvas$renderTextStroke = F5(\n\tfunction (txt, x, y, color, cmds) {\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\tA4(joakin$elm_canvas$Canvas$Internal$strokeText, txt.U, x, y, txt.F),\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tjoakin$elm_canvas$Canvas$Internal$strokeStyle(color),\n\t\t\t\tcmds));\n\t});\nvar joakin$elm_canvas$Canvas$renderTextDrawOp = F3(\n\tfunction (drawOp, txt, cmds) {\n\t\tvar _n0 = txt.aa;\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tswitch (drawOp.$) {\n\t\t\tcase 0:\n\t\t\t\treturn A5(joakin$elm_canvas$Canvas$renderTextFill, txt, x, y, avh4$elm_color$Color$black, cmds);\n\t\t\tcase 1:\n\t\t\t\tvar c = drawOp.a;\n\t\t\t\treturn A5(joakin$elm_canvas$Canvas$renderTextFill, txt, x, y, c, cmds);\n\t\t\tcase 2:\n\t\t\t\tvar c = drawOp.a;\n\t\t\t\treturn A5(joakin$elm_canvas$Canvas$renderTextStroke, txt, x, y, c, cmds);\n\t\t\tdefault:\n\t\t\t\tvar fc = drawOp.a;\n\t\t\t\tvar sc = drawOp.b;\n\t\t\t\treturn A5(\n\t\t\t\t\tjoakin$elm_canvas$Canvas$renderTextStroke,\n\t\t\t\t\ttxt,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tsc,\n\t\t\t\t\tA5(joakin$elm_canvas$Canvas$renderTextFill, txt, x, y, fc, cmds));\n\t\t}\n\t});\nvar joakin$elm_canvas$Canvas$renderText = F3(\n\tfunction (drawOp, txt, cmds) {\n\t\treturn A3(joakin$elm_canvas$Canvas$renderTextDrawOp, drawOp, txt, cmds);\n\t});\nvar joakin$elm_canvas$Canvas$Internal$beginPath = A2(joakin$elm_canvas$Canvas$Internal$fn, 'beginPath', _List_Nil);\nvar joakin$elm_canvas$Canvas$renderDrawable = F3(\n\tfunction (drawable, drawOp, cmds) {\n\t\tif (!drawable.$) {\n\t\t\tvar txt = drawable.a;\n\t\t\treturn A3(joakin$elm_canvas$Canvas$renderText, drawOp, txt, cmds);\n\t\t} else {\n\t\t\tvar ss = drawable.a;\n\t\t\treturn A2(\n\t\t\t\tjoakin$elm_canvas$Canvas$renderShapeDrawOp,\n\t\t\t\tdrawOp,\n\t\t\t\tA3(\n\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\tjoakin$elm_canvas$Canvas$renderShape,\n\t\t\t\t\tA2(elm$core$List$cons, joakin$elm_canvas$Canvas$Internal$beginPath, cmds),\n\t\t\t\t\tss));\n\t\t}\n\t});\nvar joakin$elm_canvas$Canvas$Internal$restore = A2(joakin$elm_canvas$Canvas$Internal$fn, 'restore', _List_Nil);\nvar joakin$elm_canvas$Canvas$Internal$save = A2(joakin$elm_canvas$Canvas$Internal$fn, 'save', _List_Nil);\nvar joakin$elm_canvas$Canvas$renderOne = F2(\n\tfunction (_n0, cmds) {\n\t\tvar data = _n0;\n\t\tvar commands = data.o;\n\t\tvar drawable = data.C;\n\t\tvar drawOp = data.B;\n\t\treturn A2(\n\t\t\telm$core$List$cons,\n\t\t\tjoakin$elm_canvas$Canvas$Internal$restore,\n\t\t\tA3(\n\t\t\t\tjoakin$elm_canvas$Canvas$renderDrawable,\n\t\t\t\tdrawable,\n\t\t\t\tdrawOp,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tcommands,\n\t\t\t\t\tA2(elm$core$List$cons, joakin$elm_canvas$Canvas$Internal$save, cmds))));\n\t});\nvar joakin$elm_canvas$Canvas$Internal$empty = _List_Nil;\nvar joakin$elm_canvas$Canvas$render = function (entities) {\n\treturn A3(elm$core$List$foldl, joakin$elm_canvas$Canvas$renderOne, joakin$elm_canvas$Canvas$Internal$empty, entities);\n};\nvar elm$virtual_dom$VirtualDom$property = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\t_VirtualDom_noInnerHtmlOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar elm$html$Html$Attributes$property = elm$virtual_dom$VirtualDom$property;\nvar joakin$elm_canvas$Canvas$Internal$commands = function (list) {\n\treturn A2(\n\t\telm$html$Html$Attributes$property,\n\t\t'cmds',\n\t\tA2(elm$json$Json$Encode$list, elm$core$Basics$identity, list));\n};\nvar joakin$elm_canvas$Canvas$toHtml = F3(\n\tfunction (_n0, attrs, entities) {\n\t\tvar w = _n0.a;\n\t\tvar h = _n0.b;\n\t\treturn A3(\n\t\t\telm$html$Html$node,\n\t\t\t'elm-canvas',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tjoakin$elm_canvas$Canvas$Internal$commands(\n\t\t\t\t\tjoakin$elm_canvas$Canvas$render(entities)),\n\t\t\t\t\telm$html$Html$Attributes$height(h),\n\t\t\t\t\telm$html$Html$Attributes$width(w)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$canvas,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\telm$html$Html$Attributes$height(h),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\telm$html$Html$Attributes$width(w),\n\t\t\t\t\t\t\tattrs)),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]));\n\t});\nvar author$project$Game$view = function (world) {\n\treturn A3(\n\t\tjoakin$elm_canvas$Canvas$toHtml,\n\t\t_Utils_Tuple2(\n\t\t\telm$core$Basics$round(author$project$Setup$setup.af),\n\t\t\telm$core$Basics$round(author$project$Setup$setup.Y)),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'width',\n\t\t\t\tauthor$project$Game$toPx(author$project$Setup$setup.af)),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'height',\n\t\t\t\tauthor$project$Game$toPx(author$project$Setup$setup.Y)),\n\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\tauthor$project$Game$SetRunning(!world.D))\n\t\t\t]),\n\t\tA2(\n\t\t\telm$core$List$cons,\n\t\t\tA2(\n\t\t\t\tjoakin$elm_canvas$Canvas$shapes,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tjoakin$elm_canvas$Canvas$fill(avh4$elm_color$Color$white)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\tjoakin$elm_canvas$Canvas$rect,\n\t\t\t\t\t\t_Utils_Tuple2(0, 0),\n\t\t\t\t\t\tauthor$project$Setup$setup.af,\n\t\t\t\t\t\tauthor$project$Setup$setup.Y)\n\t\t\t\t\t])),\n\t\t\t_Utils_ap(\n\t\t\t\tauthor$project$Game$renderItems(world),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\tjoakin$elm_canvas$Canvas$text,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tjoakin$elm_canvas$Canvas$fill(avh4$elm_color$Color$red),\n\t\t\t\t\t\t\t\tjoakin$elm_canvas$Canvas$font(\n\t\t\t\t\t\t\t\t{a6: 'Arial Black', bz: 15})\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_Utils_Tuple2(10, 20),\n\t\t\t\t\t\tworld.D ? 'Running...' : 'Paused')\n\t\t\t\t\t]))));\n};\nvar author$project$Main$GameMsg = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$virtual_dom$VirtualDom$map = _VirtualDom_map;\nvar elm$html$Html$map = elm$virtual_dom$VirtualDom$map;\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar author$project$Main$view = function (_n0) {\n\tvar world = _n0.n;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$text('Game of Life?'),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$map,\n\t\t\t\tauthor$project$Main$GameMsg,\n\t\t\t\tauthor$project$Game$view(world))\n\t\t\t]));\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{bd: author$project$Main$init, bB: author$project$Main$subscriptions, bI: author$project$Main$update, bK: author$project$Main$view});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport 'elm-canvas';\nimport { Elm } from './Main.elm';\nimport { unregister } from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nunregister();\n"],"sourceRoot":""}